package fail.toepic.colorinfos.repository

import fail.toepic.colorinfos.model.ColorCode
import fail.toepic.colorinfos.model.RGB

object HTML5ColorsRepository {

    private val _colorInfos : MutableList<ColorInfo> = mutableListOf()
    private var _groupNames : MutableList<String> = mutableListOf()
    //TODO 위크레퍼런스르 쓰던 캐싱을 하던 좀더 깔끔한 방법이 없는지 고려해야함.
    init{
        _colorInfos.apply {
            add(ColorInfo("AliceBlue",RGB.fromString("#BA55D3") ?: RGB(-1,-1,-1),"White"))
            add(ColorInfo("AntiqueWhite",RGB.fromString("#9370DB") ?: RGB(-1,-1,-1),"White"))
            add(ColorInfo("Aqua",RGB.fromString("#3CB371") ?: RGB(-1,-1,-1),"Cyan"))
            add(ColorInfo("Aquamarine",RGB.fromString("#7B68EE") ?: RGB(-1,-1,-1),"Cyan"))
            add(ColorInfo("Azure",RGB.fromString("#00FA9A") ?: RGB(-1,-1,-1),"White"))
            add(ColorInfo("Beige",RGB.fromString("#48D1CC") ?: RGB(-1,-1,-1),"White"))
            add(ColorInfo("Bisque",RGB.fromString("#C71585") ?: RGB(-1,-1,-1),"Brown"))
            add(ColorInfo("Black",RGB.fromString("#191970") ?: RGB(-1,-1,-1),"Gray"))
            add(ColorInfo("BlanchedAlmond",RGB.fromString("#F5FFFA") ?: RGB(-1,-1,-1),"Brown"))
            add(ColorInfo("Blue",RGB.fromString("#FFE4E1") ?: RGB(-1,-1,-1),"Blue"))
            add(ColorInfo("BlueViolet",RGB.fromString("#FFE4B5") ?: RGB(-1,-1,-1),"Purple"))
            add(ColorInfo("Brown",RGB.fromString("#FFDEAD") ?: RGB(-1,-1,-1),"Brown"))
            add(ColorInfo("BurlyWood",RGB.fromString("#000080") ?: RGB(-1,-1,-1),"Brown"))
            add(ColorInfo("CadetBlue",RGB.fromString("#FDF5E6") ?: RGB(-1,-1,-1),"Blue"))
            add(ColorInfo("Chartreuse",RGB.fromString("#808000") ?: RGB(-1,-1,-1),"Green"))
            add(ColorInfo("Chocolate",RGB.fromString("#6B8E23") ?: RGB(-1,-1,-1),"Brown"))
            add(ColorInfo("Coral",RGB.fromString("#FFA500") ?: RGB(-1,-1,-1),"Orange"))
            add(ColorInfo("CornflowerBlue",RGB.fromString("#FF4500") ?: RGB(-1,-1,-1),"Blue"))
            add(ColorInfo("Cornsilk",RGB.fromString("#DA70D6") ?: RGB(-1,-1,-1),"Brown"))
            add(ColorInfo("Crimson",RGB.fromString("#EEE8AA") ?: RGB(-1,-1,-1),"Red"))
            add(ColorInfo("Cyan",RGB.fromString("#98FB98") ?: RGB(-1,-1,-1),"Cyan"))
            add(ColorInfo("DarkBlue",RGB.fromString("#AFEEEE") ?: RGB(-1,-1,-1),"Blue"))
            add(ColorInfo("DarkCyan",RGB.fromString("#DB7093") ?: RGB(-1,-1,-1),"Green"))
            add(ColorInfo("DarkGoldenRod",RGB.fromString("#FFEFD5") ?: RGB(-1,-1,-1),"Brown"))
            add(ColorInfo("DarkGray",RGB.fromString("#FFDAB9") ?: RGB(-1,-1,-1),"Gray"))
            add(ColorInfo("DarkGrey",RGB.fromString("#CD853F") ?: RGB(-1,-1,-1),"Gray"))
            add(ColorInfo("DarkGreen",RGB.fromString("#FFC0CB") ?: RGB(-1,-1,-1),"Green"))
            add(ColorInfo("DarkKhaki",RGB.fromString("#DDA0DD") ?: RGB(-1,-1,-1),"Yellow"))
            add(ColorInfo("DarkMagenta",RGB.fromString("#B0E0E6") ?: RGB(-1,-1,-1),"Purple"))
            add(ColorInfo("DarkOliveGreen",RGB.fromString("#800080") ?: RGB(-1,-1,-1),"Green"))
            add(ColorInfo("DarkOrange",RGB.fromString("#663399") ?: RGB(-1,-1,-1),"Orange"))
            add(ColorInfo("DarkOrchid",RGB.fromString("#FF0000") ?: RGB(-1,-1,-1),"Purple"))
            add(ColorInfo("DarkRed",RGB.fromString("#BC8F8F") ?: RGB(-1,-1,-1),"Red"))
            add(ColorInfo("DarkSalmon",RGB.fromString("#4169E1") ?: RGB(-1,-1,-1),"Red"))
            add(ColorInfo("DarkSeaGreen",RGB.fromString("#8B4513") ?: RGB(-1,-1,-1),"Green"))
            add(ColorInfo("DarkSlateBlue",RGB.fromString("#FA8072") ?: RGB(-1,-1,-1),"Purple"))
            add(ColorInfo("DarkSlateGray",RGB.fromString("#F4A460") ?: RGB(-1,-1,-1),"Gray"))
            add(ColorInfo("DarkSlateGrey",RGB.fromString("#2E8B57") ?: RGB(-1,-1,-1),"Gray"))
            add(ColorInfo("DarkTurquoise",RGB.fromString("#FFF5EE") ?: RGB(-1,-1,-1),"Cyan"))
            add(ColorInfo("DarkViolet",RGB.fromString("#A0522D") ?: RGB(-1,-1,-1),"Purple"))
            add(ColorInfo("DeepPink",RGB.fromString("#C0C0C0") ?: RGB(-1,-1,-1),"Pink"))
            add(ColorInfo("DeepSkyBlue",RGB.fromString("#87CEEB") ?: RGB(-1,-1,-1),"Blue"))
            add(ColorInfo("DimGray",RGB.fromString("#6A5ACD") ?: RGB(-1,-1,-1),"Gray"))
            add(ColorInfo("DimGrey",RGB.fromString("#708090") ?: RGB(-1,-1,-1),"Gray"))
            add(ColorInfo("DodgerBlue",RGB.fromString("#708090") ?: RGB(-1,-1,-1),"Blue"))
            add(ColorInfo("FireBrick",RGB.fromString("#FFFAFA") ?: RGB(-1,-1,-1),"Red"))
            add(ColorInfo("FloralWhite",RGB.fromString("#00FF7F") ?: RGB(-1,-1,-1),"White"))
            add(ColorInfo("ForestGreen",RGB.fromString("#4682B4") ?: RGB(-1,-1,-1),"Green"))
            add(ColorInfo("Fuchsia",RGB.fromString("#D2B48C") ?: RGB(-1,-1,-1),"Purple"))
            add(ColorInfo("Gainsboro",RGB.fromString("#008080") ?: RGB(-1,-1,-1),"Gray"))
            add(ColorInfo("GhostWhite",RGB.fromString("#D8BFD8") ?: RGB(-1,-1,-1),"White"))
            add(ColorInfo("Gold",RGB.fromString("#FF6347") ?: RGB(-1,-1,-1),"Yellow"))
            add(ColorInfo("GoldenRod",RGB.fromString("#40E0D0") ?: RGB(-1,-1,-1),"Brown"))
            add(ColorInfo("Gray",RGB.fromString("#EE82EE") ?: RGB(-1,-1,-1),"Gray"))
            add(ColorInfo("Grey",RGB.fromString("#F5DEB3") ?: RGB(-1,-1,-1),"Gray"))
            add(ColorInfo("Green",RGB.fromString("#FFFFFF") ?: RGB(-1,-1,-1),"Green"))
            add(ColorInfo("GreenYellow",RGB.fromString("#F5F5F5") ?: RGB(-1,-1,-1),"Green"))
            add(ColorInfo("HoneyDew",RGB.fromString("#FFFF00") ?: RGB(-1,-1,-1),"White"))
            add(ColorInfo("HotPink",RGB.fromString("#9ACD32") ?: RGB(-1,-1,-1),"Pink"))
            add(ColorInfo("IndianRed",RGB.fromString("#CD5C5C") ?: RGB(-1,-1,-1),"Red"))
            add(ColorInfo("Indigo",RGB.fromString("#4B0082") ?: RGB(-1,-1,-1),"Purple"))
            add(ColorInfo("Ivory",RGB.fromString("#FFFFF0") ?: RGB(-1,-1,-1),"White"))
            add(ColorInfo("Khaki",RGB.fromString("#F0E68C") ?: RGB(-1,-1,-1),"Yellow"))
            add(ColorInfo("Lavender",RGB.fromString("#E6E6FA") ?: RGB(-1,-1,-1),"Purple"))
            add(ColorInfo("LavenderBlush",RGB.fromString("#FFF0F5") ?: RGB(-1,-1,-1),"White"))
            add(ColorInfo("LawnGreen",RGB.fromString("#7CFC00") ?: RGB(-1,-1,-1),"Green"))
            add(ColorInfo("LemonChiffon",RGB.fromString("#FFFACD") ?: RGB(-1,-1,-1),"Yellow"))
            add(ColorInfo("LightBlue",RGB.fromString("#ADD8E6") ?: RGB(-1,-1,-1),"Blue"))
            add(ColorInfo("LightCoral",RGB.fromString("#F08080") ?: RGB(-1,-1,-1),"Red"))
            add(ColorInfo("LightCyan",RGB.fromString("#E0FFFF") ?: RGB(-1,-1,-1),"Cyan"))
            add(ColorInfo("LightGoldenRodYellow",RGB.fromString("#FAFAD2") ?: RGB(-1,-1,-1),"Yellow"))
            add(ColorInfo("LightGray",RGB.fromString("#D3D3D3") ?: RGB(-1,-1,-1),"Gray"))
            add(ColorInfo("LightGrey",RGB.fromString("#D3D3D3") ?: RGB(-1,-1,-1),"Gray"))
            add(ColorInfo("LightGreen",RGB.fromString("#90EE90") ?: RGB(-1,-1,-1),"Green"))
            add(ColorInfo("LightPink",RGB.fromString("#FFB6C1") ?: RGB(-1,-1,-1),"Pink"))
            add(ColorInfo("LightSalmon",RGB.fromString("#FFA07A") ?: RGB(-1,-1,-1),"Red"))
            add(ColorInfo("LightSeaGreen",RGB.fromString("#20B2AA") ?: RGB(-1,-1,-1),"Green"))
            add(ColorInfo("LightSkyBlue",RGB.fromString("#87CEFA") ?: RGB(-1,-1,-1),"Blue"))
            add(ColorInfo("LightSlateGray",RGB.fromString("#778899") ?: RGB(-1,-1,-1),"Gray"))
            add(ColorInfo("LightSlateGrey",RGB.fromString("#778899") ?: RGB(-1,-1,-1),"Gray"))
            add(ColorInfo("LightSteelBlue",RGB.fromString("#B0C4DE") ?: RGB(-1,-1,-1),"Blue"))
            add(ColorInfo("LightYellow",RGB.fromString("#FFFFE0") ?: RGB(-1,-1,-1),"Yellow"))
            add(ColorInfo("Lime",RGB.fromString("#00FF00") ?: RGB(-1,-1,-1),"Green"))
            add(ColorInfo("LimeGreen",RGB.fromString("#32CD32") ?: RGB(-1,-1,-1),"Green"))
            add(ColorInfo("Linen",RGB.fromString("#FAF0E6") ?: RGB(-1,-1,-1),"White"))
            add(ColorInfo("Magenta",RGB.fromString("#FF00FF") ?: RGB(-1,-1,-1),"Purple"))
            add(ColorInfo("Maroon",RGB.fromString("#800000") ?: RGB(-1,-1,-1),"Brown"))
            add(ColorInfo("MediumAquaMarine",RGB.fromString("#66CDAA") ?: RGB(-1,-1,-1),"Green"))
            add(ColorInfo("MediumBlue",RGB.fromString("#0000CD") ?: RGB(-1,-1,-1),"Blue"))
            add(ColorInfo("MediumOrchid",RGB.fromString("#BA55D3") ?: RGB(-1,-1,-1),"Purple"))
            add(ColorInfo("MediumPurple",RGB.fromString("#9370DB") ?: RGB(-1,-1,-1),"Purple"))
            add(ColorInfo("MediumSeaGreen",RGB.fromString("#3CB371") ?: RGB(-1,-1,-1),"Green"))
            add(ColorInfo("MediumSlateBlue",RGB.fromString("#7B68EE") ?: RGB(-1,-1,-1),"Purple"))
            add(ColorInfo("MediumSpringGreen",RGB.fromString("#00FA9A") ?: RGB(-1,-1,-1),"Green"))
            add(ColorInfo("MediumTurquoise",RGB.fromString("#48D1CC") ?: RGB(-1,-1,-1),"Cyan"))
            add(ColorInfo("MediumVioletRed",RGB.fromString("#C71585") ?: RGB(-1,-1,-1),"Pink"))
            add(ColorInfo("MidnightBlue",RGB.fromString("#191970") ?: RGB(-1,-1,-1),"Blue"))
            add(ColorInfo("MintCream",RGB.fromString("#F5FFFA") ?: RGB(-1,-1,-1),"White"))
            add(ColorInfo("MistyRose",RGB.fromString("#FFE4E1") ?: RGB(-1,-1,-1),"White"))
            add(ColorInfo("Moccasin",RGB.fromString("#FFE4B5") ?: RGB(-1,-1,-1),"Yellow"))
            add(ColorInfo("NavajoWhite",RGB.fromString("#FFDEAD") ?: RGB(-1,-1,-1),"Brown"))
            add(ColorInfo("Navy",RGB.fromString("#000080") ?: RGB(-1,-1,-1),"Blue"))
            add(ColorInfo("OldLace",RGB.fromString("#FDF5E6") ?: RGB(-1,-1,-1),"White"))
            add(ColorInfo("Olive",RGB.fromString("#808000") ?: RGB(-1,-1,-1),"Brown"))
            add(ColorInfo("OliveDrab",RGB.fromString("#6B8E23") ?: RGB(-1,-1,-1),"Green"))
            add(ColorInfo("Orange",RGB.fromString("#FFA500") ?: RGB(-1,-1,-1),"Orange"))
            add(ColorInfo("OrangeRed",RGB.fromString("#FF4500") ?: RGB(-1,-1,-1),"Orange"))
            add(ColorInfo("Orchid",RGB.fromString("#DA70D6") ?: RGB(-1,-1,-1),"Purple"))
            add(ColorInfo("PaleGoldenRod",RGB.fromString("#EEE8AA") ?: RGB(-1,-1,-1),"Yellow"))
            add(ColorInfo("PaleGreen",RGB.fromString("#98FB98") ?: RGB(-1,-1,-1),"Green"))
            add(ColorInfo("PaleTurquoise",RGB.fromString("#AFEEEE") ?: RGB(-1,-1,-1),"Cyan"))
            add(ColorInfo("PaleVioletRed",RGB.fromString("#DB7093") ?: RGB(-1,-1,-1),"Pink"))
            add(ColorInfo("PapayaWhip",RGB.fromString("#FFEFD5") ?: RGB(-1,-1,-1),"Yellow"))
            add(ColorInfo("PeachPuff",RGB.fromString("#FFDAB9") ?: RGB(-1,-1,-1),"Yellow"))
            add(ColorInfo("Peru",RGB.fromString("#CD853F") ?: RGB(-1,-1,-1),"Brown"))
            add(ColorInfo("Pink",RGB.fromString("#FFC0CB") ?: RGB(-1,-1,-1),"Pink"))
            add(ColorInfo("Plum",RGB.fromString("#DDA0DD") ?: RGB(-1,-1,-1),"Purple"))
            add(ColorInfo("PowderBlue",RGB.fromString("#B0E0E6") ?: RGB(-1,-1,-1),"Blue"))
            add(ColorInfo("Purple",RGB.fromString("#800080") ?: RGB(-1,-1,-1),"Purple"))
            add(ColorInfo("RebeccaPurple",RGB.fromString("#663399") ?: RGB(-1,-1,-1),"Purple"))
            add(ColorInfo("Red",RGB.fromString("#FF0000") ?: RGB(-1,-1,-1),"Red"))
            add(ColorInfo("RosyBrown",RGB.fromString("#BC8F8F") ?: RGB(-1,-1,-1),"Brown"))
            add(ColorInfo("RoyalBlue",RGB.fromString("#4169E1") ?: RGB(-1,-1,-1),"Blue"))
            add(ColorInfo("SaddleBrown",RGB.fromString("#8B4513") ?: RGB(-1,-1,-1),"Brown"))
            add(ColorInfo("Salmon",RGB.fromString("#FA8072") ?: RGB(-1,-1,-1),"Red"))
            add(ColorInfo("SandyBrown",RGB.fromString("#F4A460") ?: RGB(-1,-1,-1),"Brown"))
            add(ColorInfo("SeaGreen",RGB.fromString("#2E8B57") ?: RGB(-1,-1,-1),"Green"))
            add(ColorInfo("SeaShell",RGB.fromString("#FFF5EE") ?: RGB(-1,-1,-1),"White"))
            add(ColorInfo("Sienna",RGB.fromString("#A0522D") ?: RGB(-1,-1,-1),"Brown"))
            add(ColorInfo("Silver",RGB.fromString("#C0C0C0") ?: RGB(-1,-1,-1),"Gray"))
            add(ColorInfo("SkyBlue",RGB.fromString("#87CEEB") ?: RGB(-1,-1,-1),"Blue"))
            add(ColorInfo("SlateBlue",RGB.fromString("#6A5ACD") ?: RGB(-1,-1,-1),"Purple"))
            add(ColorInfo("SlateGray",RGB.fromString("#708090") ?: RGB(-1,-1,-1),"Gray"))
            add(ColorInfo("SlateGrey",RGB.fromString("#708090") ?: RGB(-1,-1,-1),"Gray"))
            add(ColorInfo("Snow",RGB.fromString("#FFFAFA") ?: RGB(-1,-1,-1),"White"))
            add(ColorInfo("SpringGreen",RGB.fromString("#00FF7F") ?: RGB(-1,-1,-1),"Green"))
            add(ColorInfo("SteelBlue",RGB.fromString("#4682B4") ?: RGB(-1,-1,-1),"Blue"))
            add(ColorInfo("Tan",RGB.fromString("#D2B48C") ?: RGB(-1,-1,-1),"Brown"))
            add(ColorInfo("Teal",RGB.fromString("#008080") ?: RGB(-1,-1,-1),"Green"))
            add(ColorInfo("Thistle",RGB.fromString("#D8BFD8") ?: RGB(-1,-1,-1),"Purple"))
            add(ColorInfo("Tomato",RGB.fromString("#FF6347") ?: RGB(-1,-1,-1),"Orange"))
            add(ColorInfo("Turquoise",RGB.fromString("#40E0D0") ?: RGB(-1,-1,-1),"Cyan"))
            add(ColorInfo("Violet",RGB.fromString("#EE82EE") ?: RGB(-1,-1,-1),"Purple"))
            add(ColorInfo("Wheat",RGB.fromString("#F5DEB3") ?: RGB(-1,-1,-1),"Brown"))
            add(ColorInfo("White",RGB.fromString("#FFFFFF") ?: RGB(-1,-1,-1),"White"))
            add(ColorInfo("WhiteSmoke",RGB.fromString("#F5F5F5") ?: RGB(-1,-1,-1),"White"))
            add(ColorInfo("Yellow",RGB.fromString("#FFFF00") ?: RGB(-1,-1,-1),"Yellow"))
            add(ColorInfo("YellowGreen",RGB.fromString("#9ACD32") ?: RGB(-1,-1,-1),"Green"))

        }
        _groupNames = _colorInfos.distinctBy { it.colorGroup }.map { it.colorGroup }.sorted().toMutableList()
    }

    // 이름으로 정렬 된 전체 리스트를 반환 함.
    val colorInfos : List<ColorInfo>
        get() = _colorInfos.toList()
    val colorGroups : List<String>
            get() = _groupNames.toList()


    // 특정 그룹에 속하는 컬러들을 반환함.
    fun getGroupedColor(key : String): List<ColorInfo> = _colorInfos.filter { it.colorGroup == key }.toList()

    val getGroupedColors : Map<String,List<ColorInfo>>
            get() = colorGroups.map { it to getGroupedColor(it) }.toMap()


    // 그룹 순서로 정렬된 리스트를 반환함.
    val groupedColorList :  List<ColorInfo>
        get()  = colorInfos.sortedBy { it.colorGroup + "||" +it.name}

}
data class ColorInfo(val name:String,val code:ColorCode,val colorGroup:String)
